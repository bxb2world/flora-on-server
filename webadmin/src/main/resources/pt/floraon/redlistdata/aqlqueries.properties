redlistdata.1= \
FOR t IN taxent \
    FOR trl IN @@collection \
        FILTER t._id == trl.taxEntID SORT t.name \
        RETURN MERGE(trl, { taxEnt: t })

redlistdata.1a= \
FOR trl IN @@collection \
    FILTER trl.tags ANY IN @tags \
    FOR t IN taxent \
        FILTER t._id == trl.taxEntID SORT t.name \
        RETURN MERGE(trl, { taxEnt: t })

redlistdata.2= \
  FOR trl IN redlist_%1$s \
    FILTER trl.taxEntID == '%2$s' \
    RETURN MERGE(trl, { taxEntID: '%2$s', taxEnt: DOCUMENT('%2$s') })

redlistdata.3= \
FOR u IN user \
    FILTER u.taxonPrivileges != NULL \
    FOR tp IN u.taxonPrivileges \
        FOR at IN tp.applicableTaxa \
            FOR tg IN 0..100 INBOUND at PART_OF, ANY SYNONYM \
                FOR rl IN redlist_%1$s \
                    FILTER tg._id == rl.taxEntID \
                    RETURN {taxonName: tg.name, taxEntId: tg._id, privileges: tp.privileges, userId: u._id}

redlistdata.4= \
FOR trl IN redlist_%1$s \
    FILTER trl.taxEntID IN @ids \
    UPDATE trl WITH @data IN redlist_%1$s \
    RETURN NEW._id

redlistdata.5=FOR t IN UNIQUE(FLATTEN(FOR rld IN redlist_%1$s RETURN rld.tags)) RETURN t

redlistdata.6= \
FOR trl IN redlist_%1$s \
    FILTER trl.taxEntID == '%2$s' \
    REMOVE trl IN redlist_%1$s \
    RETURN OLD._key

redlistdata.7= \
FOR t IN taxent \
    FOR trl IN redlist_%1$s \
        FILTER t._id == trl.taxEntID SORT t.name \
        RETURN t

redlistdata.7a= \
FOR t IN taxent \
    FOR trl IN redlist_%1$s \
        FILTER t._id == trl.taxEntID && '%2$s' IN trl.tags \
        SORT t.name \
        RETURN t

redlistdata.8= \
FOR trl IN redlist_%1$s \
    FILTER trl.taxEntID IN @ids \
    UPDATE trl WITH {tags: PUSH(trl.tags, '%2$s', true)} IN redlist_%1$s \
    RETURN NEW._id

redlistdata.9= \
FOR rls IN redlist_settings \
    FILTER rls.territory == @terr \
    RETURN rls

redlistdata.9a=FOR rls IN redlist_settings RETURN rls